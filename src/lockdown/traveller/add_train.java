/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lockdown.traveller;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import static lockdown.traveller.jdbc.getConnection;

/**
 *
 * @author Lenovo
 */
public class add_train extends javax.swing.JFrame {

    /**
     * Creates new form add_train
     */
    private ArrayList<ArrayList<String>> allpaths;
    private static int index=0;
    public add_train() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        start = new javax.swing.JComboBox<>();
        end = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        find_path = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        prev = new javax.swing.JButton();
        next = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        distance = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        time = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        train_name = new javax.swing.JTextField();
        add_train = new javax.swing.JButton();
        logout = new javax.swing.JButton();
        add_stations = new javax.swing.JButton();
        find_train = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("Add Train");

        start.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        start.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "select" }));
        start.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startMouseClicked(evt);
            }
        });

        end.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        end.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "select" }));
        end.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                endMouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("To");

        find_path.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        find_path.setText("Find Path");
        find_path.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                find_pathActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "stations"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        prev.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        prev.setText("Prev");
        prev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevActionPerformed(evt);
            }
        });

        next.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        next.setText("Next");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Distance(in Km)");

        distance.setEditable(false);
        distance.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("Time(in minutes)");

        time.setEditable(false);
        time.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("Train Name");

        train_name.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        add_train.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        add_train.setText("Add");
        add_train.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_trainActionPerformed(evt);
            }
        });

        logout.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        logout.setText("Logout");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        add_stations.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        add_stations.setText("Add Stations");
        add_stations.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_stationsActionPerformed(evt);
            }
        });

        find_train.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        find_train.setText("Find Train");
        find_train.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                find_trainActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel3)
                        .addGap(34, 34, 34)
                        .addComponent(end, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(train_name)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(find_path)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(add_train, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 313, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(prev)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(next))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(distance)
                            .addComponent(time, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))))
                .addGap(44, 44, 44))
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(add_stations, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addComponent(find_train, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(train_name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(end, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addComponent(find_path)
                        .addGap(82, 82, 82)
                        .addComponent(add_train, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(distance, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(prev)
                            .addComponent(next))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add_stations, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(find_train, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void prevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevActionPerformed
        // TODO add your handling code here:
        if(index>0)
        {
            index--;
            distance.setText(String.valueOf(station_db.finddistance(allpaths.get(index))));
                time.setText(String.valueOf(station_db.findtime(allpaths.get(index))));
             jTable1.setModel(new DefaultTableModel(null,new String[]{"Stations"}));
            DefaultTableModel model1 = (DefaultTableModel)jTable1.getModel();
            ArrayList<String> arr=new ArrayList<String>();
            for(int i=0;i<allpaths.get(index).size();i++)
            {
                arr.add(allpaths.get(index).get(i).toString());
                model1.addRow(arr.toArray());
                arr.clear();
            }
        }
    }//GEN-LAST:event_prevActionPerformed

    private void startMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startMouseClicked
        // TODO add your handling code here:
        try{
            Connection con=getConnection();
            PreparedStatement statement=con.prepareStatement("SELECT * FROM station WHERE name !='"+end.getSelectedItem().toString()+"'");
            ResultSet result=statement.executeQuery();
            
            start.removeAllItems();
           start.addItem("select");
            while(result.next())
            {
                
                
                start.addItem(result.getString("name"));
               
                
            }
        }catch(Exception e)
        {
            System.out.println(e);
        }
    }//GEN-LAST:event_startMouseClicked

    private void endMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_endMouseClicked
        // TODO add your handling code here:
        try{
            Connection con=getConnection();
            PreparedStatement statement=con.prepareStatement("SELECT * FROM station WHERE name !='"+start.getSelectedItem().toString()+"'");
            ResultSet result=statement.executeQuery();
            
            end.removeAllItems();
           end.addItem("select");
            while(result.next())
            {
                
                
                end.addItem(result.getString("name"));
               
                
            }
        }catch(Exception e)
        {
            System.out.println(e);
        }
    }//GEN-LAST:event_endMouseClicked

    private void find_pathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_find_pathActionPerformed
        // TODO add your handling code here:
        if(start.getSelectedItem().toString()=="select"||end.getSelectedItem().toString()=="select")
        {
            
        }
        else
        {
        ArrayList<String> array;
        try {
            array=station_db.get();
            allPath paths=new allPath(array);
            
             
        




        try{
            Connection con=getConnection();
            PreparedStatement statement=con.prepareStatement("SELECT * FROM path");
            ResultSet result=statement.executeQuery();
            
            
            while(result.next())
            {
                
                paths.addEdge(result.getString("first"), result.getString("second"));
                
            }
            allpaths=paths.printAllPaths(start.getSelectedItem().toString(),end.getSelectedItem().toString(),array);
            
            //System.out.println(allpaths);
             jTable1.setModel(new DefaultTableModel(null,new String[]{"Stations"}));
            DefaultTableModel model1 = (DefaultTableModel)jTable1.getModel();
            index=0;
            ArrayList<String> arr=new ArrayList<String>();
            if(allpaths.size()!=0)
            {
                distance.setText(String.valueOf(station_db.finddistance(allpaths.get(index))));
                time.setText(String.valueOf(station_db.findtime(allpaths.get(index))));
            }
            else
            {
                distance.setText("");
                time.setText("");
            }
            for(int i=0;i<allpaths.get(index).size();i++)
            {
                arr.add(allpaths.get(index).get(i).toString());
                model1.addRow(arr.toArray());
                arr.clear();
            }
            
        }catch(Exception e)
        {
            System.out.println(e);
        }
        
        } catch (Exception ex) {
            Logger.getLogger(add_train.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        
    }//GEN-LAST:event_find_pathActionPerformed

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        // TODO add your handling code here:
        if(index<allpaths.size()-1)
        {
            index++;
            distance.setText(String.valueOf(station_db.finddistance(allpaths.get(index))));
                time.setText(String.valueOf(station_db.findtime(allpaths.get(index))));
             jTable1.setModel(new DefaultTableModel(null,new String[]{"Stations"}));
            DefaultTableModel model1 = (DefaultTableModel)jTable1.getModel();
            ArrayList<String> arr=new ArrayList<String>();
            for(int i=0;i<allpaths.get(index).size();i++)
            {
                arr.add(allpaths.get(index).get(i).toString());
                model1.addRow(arr.toArray());
                arr.clear();
            }
        }
    }//GEN-LAST:event_nextActionPerformed

    private void add_trainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_trainActionPerformed
        // TODO add your handling code here:
        if(!train_name.getText().toString().equals("")&&allpaths.size()!=0)
        {
            station_db.addtrain(train_name.getText().toString(), allpaths.get(index));
            
        }
    }//GEN-LAST:event_add_trainActionPerformed

    private void find_trainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_find_trainActionPerformed
        // TODO add your handling code here:
        find_train newdisplay=new find_train();
                newdisplay.setVisible(true);
                newdisplay.pack();
                newdisplay.setLocationRelativeTo(null);
                this.dispose();
    }//GEN-LAST:event_find_trainActionPerformed

    private void add_stationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_stationsActionPerformed
        // TODO add your handling code here:
        add_station newdisplay=new add_station();
                newdisplay.setVisible(true);
                newdisplay.pack();
                newdisplay.setLocationRelativeTo(null);
                this.dispose();
    }//GEN-LAST:event_add_stationsActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        login reg=new login();
                reg.setVisible(true);
                reg.pack();
                reg.setLocationRelativeTo(null);
                this.dispose();
    }//GEN-LAST:event_logoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(add_train.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(add_train.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(add_train.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(add_train.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new add_train().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_stations;
    private javax.swing.JButton add_train;
    private javax.swing.JTextField distance;
    private javax.swing.JComboBox<String> end;
    private javax.swing.JButton find_path;
    private javax.swing.JButton find_train;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton logout;
    private javax.swing.JButton next;
    private javax.swing.JButton prev;
    private javax.swing.JComboBox<String> start;
    private javax.swing.JTextField time;
    private javax.swing.JTextField train_name;
    // End of variables declaration//GEN-END:variables
}
